// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id String @id @default(uuid())
    email String @unique @db.VarChar(255)
    username String @unique @db.VarChar(255)
    displayName String @db.VarChar(255)
    passwordHash String @db.VarChar(255)
    role UserRole @default(User)
    videos Video[] @relation("Uploader")
    subCnt Int @default(0)
    visibility Visibility @default(Public)
    header Json? // Media
    profilePicture Json? // Media
    subscribedTo User[] @relation("UserSubscribers")
    subscribers User[] @relation("UserSubscribers")
    likedVideos Video[] @relation("Likes")
    dislikedVideos Video[] @relation("Dislikes")

    @@map("users")
}

model Video {
    id String @id @default(uuid())
    title String
    description String
    uploadedOn Date @default(now())
    uploader User @relation("Uploader", fields: [uploaderID], references: [id])
    uploaderID String // UserID
    tags String
    visibility VideoVisibility @default(Private)
    likes User[] @relation("Likes")
    dislikes User[] @relation("Dislikes")
    thumbnail Json? // Media
    media Json? // Media

    @@map("videos")
}

model Media {
    id String @id @default(uuid())
    src String
    type MediaType
    userID String // MediaID
    videoID String? // MediaID

    @@map("medias")
}

enum UserRole {
    User
    Mod
    Admin
}

enum VideoVisibility {
    Private
    Hidden
    Public
}

enum Visibility {
    Private
    Hidden
    Public
}

enum MediaType {
    Thumbnail
    ProfilePicture
    Video
    Header
}
